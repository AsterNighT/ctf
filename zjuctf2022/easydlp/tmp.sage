(p, A, B) = (1383333670554863678551666822362196239242273588051,
             299446119796668317821474260946629183722027371877, 722591700505463573820128374277044703680164144116)
E = EllipticCurve(GF(p), [A, B])
assert E.order() == p
P = E(221504092673696048756389221905190313468598958747,
      1294055609263533522129037670663961210779668618001)
Q = (551904316353996448232767105468524655074816725512,
     328919104033453656310428760774262418742438103547)

xP = 221504092673696048756389221905190313468598958747
yP = 1294055609263533522129037670663961210779668618001
xQ = 551904316353996448232767105468524655074816725512
yQ = 328919104033453656310428760774262418742438103547

Qp = Qp(p, 2)
Ep = EllipticCurve(Qp, [A, B])

yPp = sqrt(Qp(xP) ** 3 + Qp(A) * Qp(xP) + Qp(B))
Pp = Ep(Qp(xP), (-yPp, yPp)[yPp[0] == yP])

yQp = sqrt(Qp(xQ) ** 3 + Qp(A) * Qp(xQ) + Qp(B))
Qp = Ep(Qp(xQ), (-yQp, yQp)[yQp[0] == yQ])

print('Pp = {}'.format(Pp))
print('Qp = {}'.format(Qp))
print('-' * 40)

lQ = Ep.formal_group().log()(- (p * Qp)[0] // (p * Qp)[1]) / p
print('log(Q) = {}'.format(lQ))
lP = Ep.formal_group().log()(- (p * Pp)[0] // (p * Pp)[1]) / p
print('log(P) = {}'.format(lP))
print('-' * 40)

e = lQ / lP
print('e = {}'.format(e))

assert e[0] * E(xP, yP) == E(xQ, yQ)

print(int.to_bytes(int(e[0]), 16, 'big'))
