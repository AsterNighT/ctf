import random
from os import urandom
from Crypto.Util.strxor import strxor

flag = b'AAA{???????????????????????}' # ? means unknown printable char

title = """
,---.    ,---.    .-''-.   ______     .-./`)   ___    _ ,---.    ,---.                                                              
|    \  /    |  .'_ _   \ |    _ `''. \ .-.').'   |  | ||    \  /    |                                                              
|  ,  \/  ,  | / ( ` )   '| _ | ) _  \/ `-' \|   .'  | ||  ,  \/  ,  |                                                              
|  |\_   /|  |. (_ o _)  ||( ''_'  ) | `-'`"`.'  '_  | ||  |\_   /|  |                                                              
|  _( )_/ |  ||  (_,_)___|| . (_) `. | .---. '   ( \.-.||  _( )_/ |  |                                                              
| (_ o _) |  |'  \   .---.|(_    ._) ' |   | ' (`. _` /|| (_ o _) |  |                                                              
|  (_,_)  |  | \  `-'    /|  (_.\.' /  |   | | (_ (_) _)|  (_,_)  |  |                                                              
|  |      |  |  \       / |       .'   |   |  \ /  . \ /|  |      |  |                                                              
'--'      '--'   `'-..-'  '-----'`     '---'   ``-'`-'' '--'      '--'                                                              
                                                                                                                                    
   .-'''-.   ___    _  _______      .-'''-. ,---------. .-./`) ,---------.   ___    _ ,---------. .-./`)     ,-----.    ,---.   .--.
  / _     \.'   |  | |\  ____  \   / _     \\          \\ .-.')\          \.'   |  | |\          \\ .-.')  .'  .-,  '.  |    \  |  |
 (`' )/`--'|   .'  | || |    \ |  (`' )/`--' `--.  ,---'/ `-' \ `--.  ,---'|   .'  | | `--.  ,---'/ `-' \ / ,-.|  \ _ \ |  ,  \ |  |
(_ o _).   .'  '_  | || |____/ / (_ o _).       |   \    `-'`"`    |   \   .'  '_  | |    |   \    `-'`"`;  \  '_ /  | :|  |\_ \|  |
 (_,_). '. '   ( \.-.||   _ _ '.  (_,_). '.     :_ _:    .---.     :_ _:   '   ( \.-.|    :_ _:    .---. |  _`,/ \ _/  ||  _( )_\  |
.---.  \  :' (`. _` /||  ( ' )  \.---.  \  :    (_I_)    |   |     (_I_)   ' (`. _` /|    (_I_)    |   | : (  '\_/ \   ;| (_ o _)  |
\    `-'  || (_ (_) _)| (_{;}_) |\    `-'  |   (_(=)_)   |   |    (_(=)_)  | (_ (_) _)   (_(=)_)   |   |  \ `"/  \  ) / |  (_,_)\  |
 \       /  \ /  . \ /|  (_,_)  / \       /     (_I_)    |   |     (_I_)    \ /  . \ /    (_I_)    |   |   '. \_/``".'  |  |    |  |
  `-...-'    ``-'`-'' /_______.'   `-...-'      '---'    '---'     '---'     ``-'`-''     '---'    '---'     '-----'    '--'    '--'
                                                                                                                                    
    _______  .-./`) .-------. .---.  .---.     .-''-.  .-------.                                                                    
   /   __  \ \ .-.')\  _(`)_ \|   |  |_ _|   .'_ _   \ |  _ _   \                                                                   
  | ,_/  \__)/ `-' \| (_ o._)||   |  ( ' )  / ( ` )   '| ( ' )  |                                                                   
,-./  )       `-'`"`|  (_,_) /|   '-(_{;}_). (_ o _)  ||(_ o _) /                                                                   
\  '_ '`)     .---. |   '-.-' |      (_,_) |  (_,_)___|| (_,_).' __                                                                 
 > (_)  )  __ |   | |   |     | _ _--.   | '  \   .---.|  |\ \  |  |                                                                
(  .  .-'_/  )|   | |   |     |( ' ) |   |  \  `-'    /|  | \ `'   /                                                                
 `-'`-'     / |   | /   )     (_{;}_)|   |   \       / |  |  \    /                                                                 
   `._____.'  '---' `---'     '(_,_) '---'    `'-..-'  ''-'   `'-'                                                                  
"""

task = """
1. encrypt message
2. get encrypted flag
3. quit
Your Choice:
"""

def encrypt(data):
    assert len(data) <= 28
    key = b''
    for i in range(len(data)):
        key += bytes([random.getrandbits(8)])
    print(strxor(key,data))

print(title)
random.seed(urandom(16))
for _ in range(90):
    choose = input(task)
    if(choose == "1"):
        try:
            encrypt(input("Data to be encrypted:").encode())
        except:
            print("Wrong Form")
    elif(choose == "2"):
        encrypt(flag)
    elif(choose == "3"):
        exit()
    else:
        print("Wrong Input")
exit()
